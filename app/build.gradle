/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

ext {
    set('scalaVersion', '2.12')
    set('sparkVersion', '3.1.3')
    set('scalaXmlVersion', '2.0.1')
    set('scalaTestVersion', '3.2.9')
    set('scalaTestPlusVersion', '3.2.2.0')
}

dependencies {
    // Use Scala 2.13 in our library project
    implementation "org.scala-lang:scala-library:${scalaVersion}"

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // https://mvnrepository.com/artifact/com.amazon.deequ/deequ
    implementation 'com.amazon.deequ:deequ:2.0.0-spark-3.1'
    implementation("org.apache.spark:spark-core_${scalaVersion}:${sparkVersion}")
    implementation("org.apache.spark:spark-sql_${scalaVersion}:${sparkVersion}")

    // Use Scalatest for testing our library
    testImplementation 'junit:junit:4.12'
    testImplementation("org.scalatest:scalatest_${scalaVersion}:${scalaTestVersion}")
    testImplementation("org.scalatestplus:junit-4-13_${scalaVersion}:${scalaTestPlusVersion}")

    // Need scala-xml at test runtime
    testRuntimeOnly("org.scala-lang.modules:scala-xml_${scalaVersion}:${scalaXmlVersion}")

}

application {
    // Define the main class for the application.
    mainClass = 'deequ_testing.App'
}
